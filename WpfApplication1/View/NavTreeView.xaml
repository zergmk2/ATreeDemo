<UserControl
    x:Class="WpfApplication1.View.NavTreeView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:WpfApplication1.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:WpfApplication1.ViewModel"
    xmlns:vw="clr-namespace:WpfApplication1.View"
    x:Name="CurrentNavTreeViewName"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d">

    <UserControl.Resources>
        <converters:TreeViewLineConverter x:Key="LineConverter" />
        <converters:RootCheckboxConverter x:Key="RootChkbxConverter" />
        <converters:FolderImageConverter x:Key="FolderImageConverter" />
        <Style x:Key="styleTreeViewExpandCollapse" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Image
                            x:Name="image"
                            Width="22"
                            Height="22"
                            Source="../Images/Math-plus.ico" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="image" Property="Source" Value="../Images/Math-minus.ico" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="itemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Padding" Value="1,0,0,0" />
            <Setter Property="ItemsSource" Value="{Binding Children}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="19" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Rectangle
                                x:Name="HorLn"
                                Height="1"
                                Margin="10,1,0,0"
                                SnapsToDevicePixels="True"
                                Stroke="#DCDCDC" />
                            <Rectangle
                                x:Name="VerLn"
                                Grid.RowSpan="2"
                                Width="1"
                                Margin="0,0,1,0"
                                Fill="White"
                                SnapsToDevicePixels="true"
                                Stroke="#DCDCDC" />
                            <ToggleButton
                                x:Name="Expander"
                                Margin="-1,0,0,0"
                                ClickMode="Press"
                                IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                KeyboardNavigation.IsTabStop="False"
                                Style="{StaticResource styleTreeViewExpandCollapse}" />
                            <Border
                                x:Name="Bd"
                                Grid.Column="1"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox
                                        x:Name="ItemSelectCheckbox"
                                        VerticalAlignment="Center"
                                        Command="{Binding Path=DataContext.IsCheckedChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                        CommandParameter="{Binding}"
                                        IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                        IsThreeState="True"
                                        TabIndex="0">
                                        <!--  PreviewMouseLeftButtonDown="OnCheckBoxMouseDown"  -->
                                        <CheckBox.LayoutTransform>
                                            <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                        </CheckBox.LayoutTransform>
                                    </CheckBox>
                                    <Image
                                        x:Name="FolderImage"
                                        Width="21"
                                        Height="21"
                                        VerticalAlignment="Center"
                                        Source="../Images/folder.ico" />
                                    <ContentPresenter
                                        x:Name="PART_Header"
                                        MinWidth="20"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="Center"
                                        Content="{Binding FriendlyName}"
                                        TextBlock.FontSize="16pt" />
                                </StackPanel>
                            </Border>
                            <ItemsPresenter
                                x:Name="ItemsHost"
                                Grid.Row="1"
                                Grid.Column="1"
                                Grid.ColumnSpan="2" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Converter={StaticResource LineConverter}, RelativeSource={RelativeSource Self}}" Value="true">
                                <Setter TargetName="VerLn" Property="Height" Value="13" />
                                <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Converter={StaticResource RootChkbxConverter}, RelativeSource={RelativeSource Self}}" Value="true">
                                <Setter TargetName="ItemSelectCheckbox" Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Converter={StaticResource RootChkbxConverter}, RelativeSource={RelativeSource Self}}" Value="true">
                                <Setter TargetName="PART_Header" Property="TextBlock.FontSize" Value="30pt" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Converter={StaticResource FolderImageConverter}}" Value="false">
                                <Setter TargetName="FolderImage" Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <DataTrigger Binding="{Binding HasItems}" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                            <!--<Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                            </Trigger>-->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Width" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Height" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="IsSelectionActive" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="Green" />
                                <Setter Property="Foreground" Value="White" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <HierarchicalDataTemplate x:Key="NavTreeTempl" ItemsSource="{Binding Path=Children}">

            <!--  Transparant button + command+parameter set SelectedPath EACH time item is clicked  -->

            <!--  Note: Normally I use very basic bindings  -->
            <!--
                Note: Now commmand in ViewModel, earlier in NavTreeVm, using bindings:
                "{Binding Path=DataContext.SelectedPathFromTreeCommand, ElementName=CurrentNavTreeViewName}" (+ this User Control given name)
                or ..., RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
            -->

            <Button
                Height="20"
                Padding="0"
                Background="{x:Null}"
                BorderBrush="{x:Null}"
                ClickMode="Press"
                Command="{Binding Path=DataContext.SelectedPathFromTreeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                CommandParameter="{Binding FullPathName}"
                Focusable="False"
                ToolTip="{Binding Path=FullPathName, Mode=OneTime}">

                <!--  Icon + Friendly Name horizontally stacked  -->
                <StackPanel
                    Margin="0"
                    VerticalAlignment="Stretch"
                    Orientation="Horizontal">
                    <Image Source="{Binding Path=MyIcon, Mode=OneTime}" Stretch="Fill" />
                    <TextBlock Margin="5,0,0,0" Text="{Binding FriendlyName, Mode=OneTime}" />
                </StackPanel>
            </Button>

        </HierarchicalDataTemplate>
    </UserControl.Resources>

    <TreeView BorderThickness="0" ItemsSource="{Binding Path=RootChildren}">
        <TreeView.Resources>
            <Style BasedOn="{StaticResource itemStyle}" TargetType="{x:Type TreeViewItem}" />
        </TreeView.Resources>
    </TreeView>

    <!--<TreeView
    BorderThickness="0"

    ItemsSource="{Binding Path=RootChildren}"
    ItemTemplate="{StaticResource NavTreeTempl}" >

        <TreeView.ItemContainerStyle>
            <Style TargetType="{x:Type TreeViewItem}">
                <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}"/>

    -->
    <!--<Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
    <Setter Property="dd1:DragDropManager.DropTargetAdvisor" Value="{StaticResource FolderPlaneItemsDropAdvisor}"/>-->
    <!--

            </Style>
        </TreeView.ItemContainerStyle>
    </TreeView-->
</UserControl>
